{
    "completions": [
        {
            "contents": "Du(${1})",
            "trigger": "Du\tfunction"
        },
        {
            "contents": "Dv(${1})",
            "trigger": "Dv\tfunction"
        },
        {
            "contents": "Dw(${1})",
            "trigger": "Dw\tfunction"
        },
        {
            "contents": "abs(${1})",
            "trigger": "abs\tfunction"
        },
        {
            "contents": "accessframe(${1})",
            "trigger": "accessframe\tfunction"
        },
        {
            "contents": "acos(${1})",
            "trigger": "acos\tfunction"
        },
        {
            "contents": "addattrib(${1})",
            "trigger": "addattrib\tfunction"
        },
        {
            "contents": "addattribute(${1})",
            "trigger": "addattribute\tfunction"
        },
        {
            "contents": "adddetailattrib(${1})",
            "trigger": "adddetailattrib\tfunction"
        },
        {
            "contents": "addgroup(${1})",
            "trigger": "addgroup\tfunction"
        },
        {
            "contents": "addpoint(${1})",
            "trigger": "addpoint\tfunction"
        },
        {
            "contents": "addpointattrib(${1})",
            "trigger": "addpointattrib\tfunction"
        },
        {
            "contents": "addprim(${1})",
            "trigger": "addprim\tfunction"
        },
        {
            "contents": "addprimattrib(${1})",
            "trigger": "addprimattrib\tfunction"
        },
        {
            "contents": "addvariablename(${1})",
            "trigger": "addvariablename\tfunction"
        },
        {
            "contents": "addvertex(${1})",
            "trigger": "addvertex\tfunction"
        },
        {
            "contents": "addvertexattrib(${1})",
            "trigger": "addvertexattrib\tfunction"
        },
        {
            "contents": "addvisualizer(${1})",
            "trigger": "addvisualizer\tfunction"
        },
        {
            "contents": "agentaddclip(${1})",
            "trigger": "agentaddclip\tfunction"
        },
        {
            "contents": "agentclipcatalog(${1})",
            "trigger": "agentclipcatalog\tfunction"
        },
        {
            "contents": "agentclipchannel(${1})",
            "trigger": "agentclipchannel\tfunction"
        },
        {
            "contents": "agentcliplength(${1})",
            "trigger": "agentcliplength\tfunction"
        },
        {
            "contents": "agentclipnames(${1})",
            "trigger": "agentclipnames\tfunction"
        },
        {
            "contents": "agentclipsample(${1})",
            "trigger": "agentclipsample\tfunction"
        },
        {
            "contents": "agentclipsamplelocal(${1})",
            "trigger": "agentclipsamplelocal\tfunction"
        },
        {
            "contents": "agentclipsamplerate(${1})",
            "trigger": "agentclipsamplerate\tfunction"
        },
        {
            "contents": "agentclipsampleworld(${1})",
            "trigger": "agentclipsampleworld\tfunction"
        },
        {
            "contents": "agentcliptimes(${1})",
            "trigger": "agentcliptimes\tfunction"
        },
        {
            "contents": "agentcliptransformgroups(${1})",
            "trigger": "agentcliptransformgroups\tfunction"
        },
        {
            "contents": "agentclipweights(${1})",
            "trigger": "agentclipweights\tfunction"
        },
        {
            "contents": "agentcollisionlayer(${1})",
            "trigger": "agentcollisionlayer\tfunction"
        },
        {
            "contents": "agentcurrentlayer(${1})",
            "trigger": "agentcurrentlayer\tfunction"
        },
        {
            "contents": "agentlayerbindings(${1})",
            "trigger": "agentlayerbindings\tfunction"
        },
        {
            "contents": "agentlayers(${1})",
            "trigger": "agentlayers\tfunction"
        },
        {
            "contents": "agentlayershapes(${1})",
            "trigger": "agentlayershapes\tfunction"
        },
        {
            "contents": "agentlocaltransform(${1})",
            "trigger": "agentlocaltransform\tfunction"
        },
        {
            "contents": "agentlocaltransforms(${1})",
            "trigger": "agentlocaltransforms\tfunction"
        },
        {
            "contents": "agentrigchildren(${1})",
            "trigger": "agentrigchildren\tfunction"
        },
        {
            "contents": "agentrigfind(${1})",
            "trigger": "agentrigfind\tfunction"
        },
        {
            "contents": "agentrigparent(${1})",
            "trigger": "agentrigparent\tfunction"
        },
        {
            "contents": "agenttransformcount(${1})",
            "trigger": "agenttransformcount\tfunction"
        },
        {
            "contents": "agenttransformgroupmember(${1})",
            "trigger": "agenttransformgroupmember\tfunction"
        },
        {
            "contents": "agenttransformgroups(${1})",
            "trigger": "agenttransformgroups\tfunction"
        },
        {
            "contents": "agenttransformnames(${1})",
            "trigger": "agenttransformnames\tfunction"
        },
        {
            "contents": "agenttransformtolocal(${1})",
            "trigger": "agenttransformtolocal\tfunction"
        },
        {
            "contents": "agenttransformtoworld(${1})",
            "trigger": "agenttransformtoworld\tfunction"
        },
        {
            "contents": "agentworldtransform(${1})",
            "trigger": "agentworldtransform\tfunction"
        },
        {
            "contents": "agentworldtransforms(${1})",
            "trigger": "agentworldtransforms\tfunction"
        },
        {
            "contents": "albedo(${1})",
            "trigger": "albedo\tfunction"
        },
        {
            "contents": "alphaname(${1})",
            "trigger": "alphaname\tfunction"
        },
        {
            "contents": "ambient(${1})",
            "trigger": "ambient\tfunction"
        },
        {
            "contents": "anoise(${1})",
            "trigger": "anoise\tfunction"
        },
        {
            "contents": "append(${1})",
            "trigger": "append\tfunction"
        },
        {
            "contents": "area(${1})",
            "trigger": "area\tfunction"
        },
        {
            "contents": "argsort(${1})",
            "trigger": "argsort\tfunction"
        },
        {
            "contents": "array(${1})",
            "trigger": "array\tfunction"
        },
        {
            "contents": "ashikhmin(${1})",
            "trigger": "ashikhmin\tfunction"
        },
        {
            "contents": "asin(${1})",
            "trigger": "asin\tfunction"
        },
        {
            "contents": "assert_enabled(${1})",
            "trigger": "assert_enabled\tfunction"
        },
        {
            "contents": "assign(${1})",
            "trigger": "assign\tfunction"
        },
        {
            "contents": "atan(${1})",
            "trigger": "atan\tfunction"
        },
        {
            "contents": "atan2(${1})",
            "trigger": "atan2\tfunction"
        },
        {
            "contents": "atof(${1})",
            "trigger": "atof\tfunction"
        },
        {
            "contents": "atoi(${1})",
            "trigger": "atoi\tfunction"
        },
        {
            "contents": "atten(${1})",
            "trigger": "atten\tfunction"
        },
        {
            "contents": "attrib(${1})",
            "trigger": "attrib\tfunction"
        },
        {
            "contents": "attribclass(${1})",
            "trigger": "attribclass\tfunction"
        },
        {
            "contents": "attribsize(${1})",
            "trigger": "attribsize\tfunction"
        },
        {
            "contents": "attribtype(${1})",
            "trigger": "attribtype\tfunction"
        },
        {
            "contents": "attribtypeinfo(${1})",
            "trigger": "attribtypeinfo\tfunction"
        },
        {
            "contents": "avg(${1})",
            "trigger": "avg\tfunction"
        },
        {
            "contents": "binput(${1})",
            "trigger": "binput\tfunction"
        },
        {
            "contents": "blackbody(${1})",
            "trigger": "blackbody\tfunction"
        },
        {
            "contents": "blinn(${1})",
            "trigger": "blinn\tfunction"
        },
        {
            "contents": "blinnBRDF(${1})",
            "trigger": "blinnBRDF\tfunction"
        },
        {
            "contents": "bouncelabel(${1})",
            "trigger": "bouncelabel\tfunction"
        },
        {
            "contents": "bouncemask(${1})",
            "trigger": "bouncemask\tfunction"
        },
        {
            "contents": "bumpmap(${1})",
            "trigger": "bumpmap\tfunction"
        },
        {
            "contents": "bumpmapA(${1})",
            "trigger": "bumpmapA\tfunction"
        },
        {
            "contents": "bumpmapB(${1})",
            "trigger": "bumpmapB\tfunction"
        },
        {
            "contents": "bumpmapG(${1})",
            "trigger": "bumpmapG\tfunction"
        },
        {
            "contents": "bumpmapL(${1})",
            "trigger": "bumpmapL\tfunction"
        },
        {
            "contents": "bumpmapR(${1})",
            "trigger": "bumpmapR\tfunction"
        },
        {
            "contents": "bumpname(${1})",
            "trigger": "bumpname\tfunction"
        },
        {
            "contents": "cbrt(${1})",
            "trigger": "cbrt\tfunction"
        },
        {
            "contents": "ceil(${1})",
            "trigger": "ceil\tfunction"
        },
        {
            "contents": "ch(${1})",
            "trigger": "ch\tfunction"
        },
        {
            "contents": "ch3(${1})",
            "trigger": "ch3\tfunction"
        },
        {
            "contents": "ch4(${1})",
            "trigger": "ch4\tfunction"
        },
        {
            "contents": "chattr(${1})",
            "trigger": "chattr\tfunction"
        },
        {
            "contents": "chend(${1})",
            "trigger": "chend\tfunction"
        },
        {
            "contents": "chendf(${1})",
            "trigger": "chendf\tfunction"
        },
        {
            "contents": "chendt(${1})",
            "trigger": "chendt\tfunction"
        },
        {
            "contents": "chf(${1})",
            "trigger": "chf\tfunction"
        },
        {
            "contents": "chi(${1})",
            "trigger": "chi\tfunction"
        },
        {
            "contents": "chindex(${1})",
            "trigger": "chindex\tfunction"
        },
        {
            "contents": "chinput(${1})",
            "trigger": "chinput\tfunction"
        },
        {
            "contents": "chname(${1})",
            "trigger": "chname\tfunction"
        },
        {
            "contents": "chnumchan(${1})",
            "trigger": "chnumchan\tfunction"
        },
        {
            "contents": "chp(${1})",
            "trigger": "chp\tfunction"
        },
        {
            "contents": "chr(${1})",
            "trigger": "chr\tfunction"
        },
        {
            "contents": "chramp(${1})",
            "trigger": "chramp\tfunction"
        },
        {
            "contents": "chrate(${1})",
            "trigger": "chrate\tfunction"
        },
        {
            "contents": "chreadbuf(${1})",
            "trigger": "chreadbuf\tfunction"
        },
        {
            "contents": "chresizebuf(${1})",
            "trigger": "chresizebuf\tfunction"
        },
        {
            "contents": "chs(${1})",
            "trigger": "chs\tfunction"
        },
        {
            "contents": "chsetattr(${1})",
            "trigger": "chsetattr\tfunction"
        },
        {
            "contents": "chsraw(${1})",
            "trigger": "chsraw\tfunction"
        },
        {
            "contents": "chstart(${1})",
            "trigger": "chstart\tfunction"
        },
        {
            "contents": "chstartf(${1})",
            "trigger": "chstartf\tfunction"
        },
        {
            "contents": "chstartt(${1})",
            "trigger": "chstartt\tfunction"
        },
        {
            "contents": "chv(${1})",
            "trigger": "chv\tfunction"
        },
        {
            "contents": "chwritebuf(${1})",
            "trigger": "chwritebuf\tfunction"
        },
        {
            "contents": "cinput(${1})",
            "trigger": "cinput\tfunction"
        },
        {
            "contents": "ckspline(${1})",
            "trigger": "ckspline\tfunction"
        },
        {
            "contents": "clamp(${1})",
            "trigger": "clamp\tfunction"
        },
        {
            "contents": "clip(${1})",
            "trigger": "clip\tfunction"
        },
        {
            "contents": "colormap(${1})",
            "trigger": "colormap\tfunction"
        },
        {
            "contents": "colorname(${1})",
            "trigger": "colorname\tfunction"
        },
        {
            "contents": "computenormal(${1})",
            "trigger": "computenormal\tfunction"
        },
        {
            "contents": "concat(${1})",
            "trigger": "concat\tfunction"
        },
        {
            "contents": "cone(${1})",
            "trigger": "cone\tfunction"
        },
        {
            "contents": "cos(${1})",
            "trigger": "cos\tfunction"
        },
        {
            "contents": "cosh(${1})",
            "trigger": "cosh\tfunction"
        },
        {
            "contents": "cracktransform(${1})",
            "trigger": "cracktransform\tfunction"
        },
        {
            "contents": "create_cdf(${1})",
            "trigger": "create_cdf\tfunction"
        },
        {
            "contents": "create_pdf(${1})",
            "trigger": "create_pdf\tfunction"
        },
        {
            "contents": "cross(${1})",
            "trigger": "cross\tfunction"
        },
        {
            "contents": "cspline(${1})",
            "trigger": "cspline\tfunction"
        },
        {
            "contents": "ctransform(${1})",
            "trigger": "ctransform\tfunction"
        },
        {
            "contents": "curlnoise(${1})",
            "trigger": "curlnoise\tfunction"
        },
        {
            "contents": "curlnoise2d(${1})",
            "trigger": "curlnoise2d\tfunction"
        },
        {
            "contents": "curlxnoise(${1})",
            "trigger": "curlxnoise\tfunction"
        },
        {
            "contents": "curlxnoise2d(${1})",
            "trigger": "curlxnoise2d\tfunction"
        },
        {
            "contents": "cvex_bsdf(${1})",
            "trigger": "cvex_bsdf\tfunction"
        },
        {
            "contents": "degrees(${1})",
            "trigger": "degrees\tfunction"
        },
        {
            "contents": "depthmap(${1})",
            "trigger": "depthmap\tfunction"
        },
        {
            "contents": "depthname(${1})",
            "trigger": "depthname\tfunction"
        },
        {
            "contents": "detail(${1})",
            "trigger": "detail\tfunction"
        },
        {
            "contents": "detailattrib(${1})",
            "trigger": "detailattrib\tfunction"
        },
        {
            "contents": "detailattribsize(${1})",
            "trigger": "detailattribsize\tfunction"
        },
        {
            "contents": "detailattribtype(${1})",
            "trigger": "detailattribtype\tfunction"
        },
        {
            "contents": "detailattribtypeinfo(${1})",
            "trigger": "detailattribtypeinfo\tfunction"
        },
        {
            "contents": "detailintrinsic(${1})",
            "trigger": "detailintrinsic\tfunction"
        },
        {
            "contents": "determinant(${1})",
            "trigger": "determinant\tfunction"
        },
        {
            "contents": "diffuse(${1})",
            "trigger": "diffuse\tfunction"
        },
        {
            "contents": "diffuseBRDF(${1})",
            "trigger": "diffuseBRDF\tfunction"
        },
        {
            "contents": "dihedral(${1})",
            "trigger": "dihedral\tfunction"
        },
        {
            "contents": "dimport(${1})",
            "trigger": "dimport\tfunction"
        },
        {
            "contents": "distance(${1})",
            "trigger": "distance\tfunction"
        },
        {
            "contents": "distance2(${1})",
            "trigger": "distance2\tfunction"
        },
        {
            "contents": "dot(${1})",
            "trigger": "dot\tfunction"
        },
        {
            "contents": "dsmpixel(${1})",
            "trigger": "dsmpixel\tfunction"
        },
        {
            "contents": "efit(${1})",
            "trigger": "efit\tfunction"
        },
        {
            "contents": "eigenvalues(${1})",
            "trigger": "eigenvalues\tfunction"
        },
        {
            "contents": "endswith(${1})",
            "trigger": "endswith\tfunction"
        },
        {
            "contents": "environment(${1})",
            "trigger": "environment\tfunction"
        },
        {
            "contents": "erf(${1})",
            "trigger": "erf\tfunction"
        },
        {
            "contents": "erf_inv(${1})",
            "trigger": "erf_inv\tfunction"
        },
        {
            "contents": "erfc(${1})",
            "trigger": "erfc\tfunction"
        },
        {
            "contents": "error(${1})",
            "trigger": "error\tfunction"
        },
        {
            "contents": "eulertoquaternion(${1})",
            "trigger": "eulertoquaternion\tfunction"
        },
        {
            "contents": "eval_bsdf(${1})",
            "trigger": "eval_bsdf\tfunction"
        },
        {
            "contents": "exp(${1})",
            "trigger": "exp\tfunction"
        },
        {
            "contents": "expand_udim(${1})",
            "trigger": "expand_udim\tfunction"
        },
        {
            "contents": "expandedgegroup(${1})",
            "trigger": "expandedgegroup\tfunction"
        },
        {
            "contents": "expandpointgroup(${1})",
            "trigger": "expandpointgroup\tfunction"
        },
        {
            "contents": "expandprimgroup(${1})",
            "trigger": "expandprimgroup\tfunction"
        },
        {
            "contents": "fastshadow(${1})",
            "trigger": "fastshadow\tfunction"
        },
        {
            "contents": "filamentsample(${1})",
            "trigger": "filamentsample\tfunction"
        },
        {
            "contents": "file_stat(${1})",
            "trigger": "file_stat\tfunction"
        },
        {
            "contents": "filtershadow(${1})",
            "trigger": "filtershadow\tfunction"
        },
        {
            "contents": "filterstep(${1})",
            "trigger": "filterstep\tfunction"
        },
        {
            "contents": "find(${1})",
            "trigger": "find\tfunction"
        },
        {
            "contents": "findattribval(${1})",
            "trigger": "findattribval\tfunction"
        },
        {
            "contents": "findattribvalcount(${1})",
            "trigger": "findattribvalcount\tfunction"
        },
        {
            "contents": "finput(${1})",
            "trigger": "finput\tfunction"
        },
        {
            "contents": "fit(${1})",
            "trigger": "fit\tfunction"
        },
        {
            "contents": "fit01(${1})",
            "trigger": "fit01\tfunction"
        },
        {
            "contents": "fit10(${1})",
            "trigger": "fit10\tfunction"
        },
        {
            "contents": "fit11(${1})",
            "trigger": "fit11\tfunction"
        },
        {
            "contents": "floor(${1})",
            "trigger": "floor\tfunction"
        },
        {
            "contents": "flownoise(${1})",
            "trigger": "flownoise\tfunction"
        },
        {
            "contents": "flowpnoise(${1})",
            "trigger": "flowpnoise\tfunction"
        },
        {
            "contents": "frac(${1})",
            "trigger": "frac\tfunction"
        },
        {
            "contents": "fresnel(${1})",
            "trigger": "fresnel\tfunction"
        },
        {
            "contents": "fromNDC(${1})",
            "trigger": "fromNDC\tfunction"
        },
        {
            "contents": "frontface(${1})",
            "trigger": "frontface\tfunction"
        },
        {
            "contents": "fuzzify(${1})",
            "trigger": "fuzzify\tfunction"
        },
        {
            "contents": "fuzzy_and(${1})",
            "trigger": "fuzzy_and\tfunction"
        },
        {
            "contents": "fuzzy_defuzz_centroid(${1})",
            "trigger": "fuzzy_defuzz_centroid\tfunction"
        },
        {
            "contents": "fuzzy_nand(${1})",
            "trigger": "fuzzy_nand\tfunction"
        },
        {
            "contents": "fuzzy_nor(${1})",
            "trigger": "fuzzy_nor\tfunction"
        },
        {
            "contents": "fuzzy_not(${1})",
            "trigger": "fuzzy_not\tfunction"
        },
        {
            "contents": "fuzzy_nxor(${1})",
            "trigger": "fuzzy_nxor\tfunction"
        },
        {
            "contents": "fuzzy_or(${1})",
            "trigger": "fuzzy_or\tfunction"
        },
        {
            "contents": "fuzzy_xor(${1})",
            "trigger": "fuzzy_xor\tfunction"
        },
        {
            "contents": "geoself(${1})",
            "trigger": "geoself\tfunction"
        },
        {
            "contents": "geounwrap(${1})",
            "trigger": "geounwrap\tfunction"
        },
        {
            "contents": "getattrib(${1})",
            "trigger": "getattrib\tfunction"
        },
        {
            "contents": "getattribute(${1})",
            "trigger": "getattribute\tfunction"
        },
        {
            "contents": "getbbox(${1})",
            "trigger": "getbbox\tfunction"
        },
        {
            "contents": "getbbox_center(${1})",
            "trigger": "getbbox_center\tfunction"
        },
        {
            "contents": "getbbox_max(${1})",
            "trigger": "getbbox_max\tfunction"
        },
        {
            "contents": "getbbox_min(${1})",
            "trigger": "getbbox_min\tfunction"
        },
        {
            "contents": "getbbox_size(${1})",
            "trigger": "getbbox_size\tfunction"
        },
        {
            "contents": "getblurP(${1})",
            "trigger": "getblurP\tfunction"
        },
        {
            "contents": "getbounces(${1})",
            "trigger": "getbounces\tfunction"
        },
        {
            "contents": "getbounds(${1})",
            "trigger": "getbounds\tfunction"
        },
        {
            "contents": "getcomp(${1})",
            "trigger": "getcomp\tfunction"
        },
        {
            "contents": "getcomponents(${1})",
            "trigger": "getcomponents\tfunction"
        },
        {
            "contents": "getderiv(${1})",
            "trigger": "getderiv\tfunction"
        },
        {
            "contents": "getfogname(${1})",
            "trigger": "getfogname\tfunction"
        },
        {
            "contents": "getglobalraylevel(${1})",
            "trigger": "getglobalraylevel\tfunction"
        },
        {
            "contents": "getgroupid(${1})",
            "trigger": "getgroupid\tfunction"
        },
        {
            "contents": "getlight(${1})",
            "trigger": "getlight\tfunction"
        },
        {
            "contents": "getlightid(${1})",
            "trigger": "getlightid\tfunction"
        },
        {
            "contents": "getlightname(${1})",
            "trigger": "getlightname\tfunction"
        },
        {
            "contents": "getlights(${1})",
            "trigger": "getlights\tfunction"
        },
        {
            "contents": "getlightscope(${1})",
            "trigger": "getlightscope\tfunction"
        },
        {
            "contents": "getlocalcurvature(${1})",
            "trigger": "getlocalcurvature\tfunction"
        },
        {
            "contents": "getmaterial(${1})",
            "trigger": "getmaterial\tfunction"
        },
        {
            "contents": "getmaterialid(${1})",
            "trigger": "getmaterialid\tfunction"
        },
        {
            "contents": "getobjectid(${1})",
            "trigger": "getobjectid\tfunction"
        },
        {
            "contents": "getobjectname(${1})",
            "trigger": "getobjectname\tfunction"
        },
        {
            "contents": "getphotonlight(${1})",
            "trigger": "getphotonlight\tfunction"
        },
        {
            "contents": "getpointbbox(${1})",
            "trigger": "getpointbbox\tfunction"
        },
        {
            "contents": "getpointbbox_center(${1})",
            "trigger": "getpointbbox_center\tfunction"
        },
        {
            "contents": "getpointbbox_max(${1})",
            "trigger": "getpointbbox_max\tfunction"
        },
        {
            "contents": "getpointbbox_min(${1})",
            "trigger": "getpointbbox_min\tfunction"
        },
        {
            "contents": "getpointbbox_size(${1})",
            "trigger": "getpointbbox_size\tfunction"
        },
        {
            "contents": "getprimid(${1})",
            "trigger": "getprimid\tfunction"
        },
        {
            "contents": "getptextureid(${1})",
            "trigger": "getptextureid\tfunction"
        },
        {
            "contents": "getraylevel(${1})",
            "trigger": "getraylevel\tfunction"
        },
        {
            "contents": "getrayweight(${1})",
            "trigger": "getrayweight\tfunction"
        },
        {
            "contents": "getsamplestore(${1})",
            "trigger": "getsamplestore\tfunction"
        },
        {
            "contents": "getscope(${1})",
            "trigger": "getscope\tfunction"
        },
        {
            "contents": "getsmoothP(${1})",
            "trigger": "getsmoothP\tfunction"
        },
        {
            "contents": "getspace(${1})",
            "trigger": "getspace\tfunction"
        },
        {
            "contents": "getuvtangents(${1})",
            "trigger": "getuvtangents\tfunction"
        },
        {
            "contents": "gradient(${1})",
            "trigger": "gradient\tfunction"
        },
        {
            "contents": "hair(${1})",
            "trigger": "hair\tfunction"
        },
        {
            "contents": "hasattrib(${1})",
            "trigger": "hasattrib\tfunction"
        },
        {
            "contents": "hasdetailattrib(${1})",
            "trigger": "hasdetailattrib\tfunction"
        },
        {
            "contents": "haslight(${1})",
            "trigger": "haslight\tfunction"
        },
        {
            "contents": "hasmetadata(${1})",
            "trigger": "hasmetadata\tfunction"
        },
        {
            "contents": "hasplane(${1})",
            "trigger": "hasplane\tfunction"
        },
        {
            "contents": "haspointattrib(${1})",
            "trigger": "haspointattrib\tfunction"
        },
        {
            "contents": "hasprimattrib(${1})",
            "trigger": "hasprimattrib\tfunction"
        },
        {
            "contents": "hasvertexattrib(${1})",
            "trigger": "hasvertexattrib\tfunction"
        },
        {
            "contents": "hedge_dstpoint(${1})",
            "trigger": "hedge_dstpoint\tfunction"
        },
        {
            "contents": "hedge_dstvertex(${1})",
            "trigger": "hedge_dstvertex\tfunction"
        },
        {
            "contents": "hedge_equivcount(${1})",
            "trigger": "hedge_equivcount\tfunction"
        },
        {
            "contents": "hedge_isequiv(${1})",
            "trigger": "hedge_isequiv\tfunction"
        },
        {
            "contents": "hedge_isprimary(${1})",
            "trigger": "hedge_isprimary\tfunction"
        },
        {
            "contents": "hedge_isvalid(${1})",
            "trigger": "hedge_isvalid\tfunction"
        },
        {
            "contents": "hedge_next(${1})",
            "trigger": "hedge_next\tfunction"
        },
        {
            "contents": "hedge_nextequiv(${1})",
            "trigger": "hedge_nextequiv\tfunction"
        },
        {
            "contents": "hedge_postdstpoint(${1})",
            "trigger": "hedge_postdstpoint\tfunction"
        },
        {
            "contents": "hedge_postdstvertex(${1})",
            "trigger": "hedge_postdstvertex\tfunction"
        },
        {
            "contents": "hedge_presrcpoint(${1})",
            "trigger": "hedge_presrcpoint\tfunction"
        },
        {
            "contents": "hedge_presrcvertex(${1})",
            "trigger": "hedge_presrcvertex\tfunction"
        },
        {
            "contents": "hedge_prev(${1})",
            "trigger": "hedge_prev\tfunction"
        },
        {
            "contents": "hedge_prim(${1})",
            "trigger": "hedge_prim\tfunction"
        },
        {
            "contents": "hedge_primary(${1})",
            "trigger": "hedge_primary\tfunction"
        },
        {
            "contents": "hedge_srcpoint(${1})",
            "trigger": "hedge_srcpoint\tfunction"
        },
        {
            "contents": "hedge_srcvertex(${1})",
            "trigger": "hedge_srcvertex\tfunction"
        },
        {
            "contents": "henyeygreenstein(${1})",
            "trigger": "henyeygreenstein\tfunction"
        },
        {
            "contents": "hscript_noise(${1})",
            "trigger": "hscript_noise\tfunction"
        },
        {
            "contents": "hscript_rand(${1})",
            "trigger": "hscript_rand\tfunction"
        },
        {
            "contents": "hscript_snoise(${1})",
            "trigger": "hscript_snoise\tfunction"
        },
        {
            "contents": "hscript_sturb(${1})",
            "trigger": "hscript_sturb\tfunction"
        },
        {
            "contents": "hscript_turb(${1})",
            "trigger": "hscript_turb\tfunction"
        },
        {
            "contents": "hsvtorgb(${1})",
            "trigger": "hsvtorgb\tfunction"
        },
        {
            "contents": "iaspect(${1})",
            "trigger": "iaspect\tfunction"
        },
        {
            "contents": "ichname(${1})",
            "trigger": "ichname\tfunction"
        },
        {
            "contents": "ident(${1})",
            "trigger": "ident\tfunction"
        },
        {
            "contents": "idtopoint(${1})",
            "trigger": "idtopoint\tfunction"
        },
        {
            "contents": "idtoprim(${1})",
            "trigger": "idtoprim\tfunction"
        },
        {
            "contents": "iend(${1})",
            "trigger": "iend\tfunction"
        },
        {
            "contents": "iendtime(${1})",
            "trigger": "iendtime\tfunction"
        },
        {
            "contents": "ihasplane(${1})",
            "trigger": "ihasplane\tfunction"
        },
        {
            "contents": "import(${1})",
            "trigger": "import\tfunction"
        },
        {
            "contents": "inedgegroup(${1})",
            "trigger": "inedgegroup\tfunction"
        },
        {
            "contents": "ingroup(${1})",
            "trigger": "ingroup\tfunction"
        },
        {
            "contents": "inpointgroup(${1})",
            "trigger": "inpointgroup\tfunction"
        },
        {
            "contents": "inprimgroup(${1})",
            "trigger": "inprimgroup\tfunction"
        },
        {
            "contents": "insert(${1})",
            "trigger": "insert\tfunction"
        },
        {
            "contents": "instance(${1})",
            "trigger": "instance\tfunction"
        },
        {
            "contents": "interpolate(${1})",
            "trigger": "interpolate\tfunction"
        },
        {
            "contents": "intersect(${1})",
            "trigger": "intersect\tfunction"
        },
        {
            "contents": "intersect_all(${1})",
            "trigger": "intersect_all\tfunction"
        },
        {
            "contents": "intersect_lights(${1})",
            "trigger": "intersect_lights\tfunction"
        },
        {
            "contents": "inumplanes(${1})",
            "trigger": "inumplanes\tfunction"
        },
        {
            "contents": "invert(${1})",
            "trigger": "invert\tfunction"
        },
        {
            "contents": "invertexgroup(${1})",
            "trigger": "invertexgroup\tfunction"
        },
        {
            "contents": "iplaneindex(${1})",
            "trigger": "iplaneindex\tfunction"
        },
        {
            "contents": "iplanename(${1})",
            "trigger": "iplanename\tfunction"
        },
        {
            "contents": "iplanesize(${1})",
            "trigger": "iplanesize\tfunction"
        },
        {
            "contents": "irate(${1})",
            "trigger": "irate\tfunction"
        },
        {
            "contents": "irradiance(${1})",
            "trigger": "irradiance\tfunction"
        },
        {
            "contents": "isalpha(${1})",
            "trigger": "isalpha\tfunction"
        },
        {
            "contents": "isbound(${1})",
            "trigger": "isbound\tfunction"
        },
        {
            "contents": "isconnected(${1})",
            "trigger": "isconnected\tfunction"
        },
        {
            "contents": "isdigit(${1})",
            "trigger": "isdigit\tfunction"
        },
        {
            "contents": "isfinite(${1})",
            "trigger": "isfinite\tfunction"
        },
        {
            "contents": "isfogray(${1})",
            "trigger": "isfogray\tfunction"
        },
        {
            "contents": "isframes(${1})",
            "trigger": "isframes\tfunction"
        },
        {
            "contents": "isnan(${1})",
            "trigger": "isnan\tfunction"
        },
        {
            "contents": "isotropic(${1})",
            "trigger": "isotropic\tfunction"
        },
        {
            "contents": "israytracing(${1})",
            "trigger": "israytracing\tfunction"
        },
        {
            "contents": "issamples(${1})",
            "trigger": "issamples\tfunction"
        },
        {
            "contents": "isseconds(${1})",
            "trigger": "isseconds\tfunction"
        },
        {
            "contents": "isshadowray(${1})",
            "trigger": "isshadowray\tfunction"
        },
        {
            "contents": "istart(${1})",
            "trigger": "istart\tfunction"
        },
        {
            "contents": "istarttime(${1})",
            "trigger": "istarttime\tfunction"
        },
        {
            "contents": "isuvrendering(${1})",
            "trigger": "isuvrendering\tfunction"
        },
        {
            "contents": "isvalidindex(${1})",
            "trigger": "isvalidindex\tfunction"
        },
        {
            "contents": "isvarying(${1})",
            "trigger": "isvarying\tfunction"
        },
        {
            "contents": "itoa(${1})",
            "trigger": "itoa\tfunction"
        },
        {
            "contents": "ixres(${1})",
            "trigger": "ixres\tfunction"
        },
        {
            "contents": "iyres(${1})",
            "trigger": "iyres\tfunction"
        },
        {
            "contents": "join(${1})",
            "trigger": "join\tfunction"
        },
        {
            "contents": "kspline(${1})",
            "trigger": "kspline\tfunction"
        },
        {
            "contents": "len(${1})",
            "trigger": "len\tfunction"
        },
        {
            "contents": "length(${1})",
            "trigger": "length\tfunction"
        },
        {
            "contents": "length2(${1})",
            "trigger": "length2\tfunction"
        },
        {
            "contents": "lerp(${1})",
            "trigger": "lerp\tfunction"
        },
        {
            "contents": "lightbounces(${1})",
            "trigger": "lightbounces\tfunction"
        },
        {
            "contents": "lightid(${1})",
            "trigger": "lightid\tfunction"
        },
        {
            "contents": "limit_sample_space(${1})",
            "trigger": "limit_sample_space\tfunction"
        },
        {
            "contents": "limport(${1})",
            "trigger": "limport\tfunction"
        },
        {
            "contents": "lkspline(${1})",
            "trigger": "lkspline\tfunction"
        },
        {
            "contents": "log(${1})",
            "trigger": "log\tfunction"
        },
        {
            "contents": "log10(${1})",
            "trigger": "log10\tfunction"
        },
        {
            "contents": "lookat(${1})",
            "trigger": "lookat\tfunction"
        },
        {
            "contents": "lspline(${1})",
            "trigger": "lspline\tfunction"
        },
        {
            "contents": "lstrip(${1})",
            "trigger": "lstrip\tfunction"
        },
        {
            "contents": "luminance(${1})",
            "trigger": "luminance\tfunction"
        },
        {
            "contents": "lumname(${1})",
            "trigger": "lumname\tfunction"
        },
        {
            "contents": "makebasis(${1})",
            "trigger": "makebasis\tfunction"
        },
        {
            "contents": "maketransform(${1})",
            "trigger": "maketransform\tfunction"
        },
        {
            "contents": "maskname(${1})",
            "trigger": "maskname\tfunction"
        },
        {
            "contents": "match(${1})",
            "trigger": "match\tfunction"
        },
        {
            "contents": "matchvex_blinn(${1})",
            "trigger": "matchvex_blinn\tfunction"
        },
        {
            "contents": "matchvex_specular(${1})",
            "trigger": "matchvex_specular\tfunction"
        },
        {
            "contents": "mattrib(${1})",
            "trigger": "mattrib\tfunction"
        },
        {
            "contents": "max(${1})",
            "trigger": "max\tfunction"
        },
        {
            "contents": "mdensity(${1})",
            "trigger": "mdensity\tfunction"
        },
        {
            "contents": "metadata(${1})",
            "trigger": "metadata\tfunction"
        },
        {
            "contents": "metaimport(${1})",
            "trigger": "metaimport\tfunction"
        },
        {
            "contents": "metamarch(${1})",
            "trigger": "metamarch\tfunction"
        },
        {
            "contents": "metanext(${1})",
            "trigger": "metanext\tfunction"
        },
        {
            "contents": "metastart(${1})",
            "trigger": "metastart\tfunction"
        },
        {
            "contents": "metaweight(${1})",
            "trigger": "metaweight\tfunction"
        },
        {
            "contents": "min(${1})",
            "trigger": "min\tfunction"
        },
        {
            "contents": "minpos(${1})",
            "trigger": "minpos\tfunction"
        },
        {
            "contents": "mspace(${1})",
            "trigger": "mspace\tfunction"
        },
        {
            "contents": "nametopoint(${1})",
            "trigger": "nametopoint\tfunction"
        },
        {
            "contents": "nametoprim(${1})",
            "trigger": "nametoprim\tfunction"
        },
        {
            "contents": "nbouncetypes(${1})",
            "trigger": "nbouncetypes\tfunction"
        },
        {
            "contents": "nearpoint(${1})",
            "trigger": "nearpoint\tfunction"
        },
        {
            "contents": "nearpoints(${1})",
            "trigger": "nearpoints\tfunction"
        },
        {
            "contents": "nedgesgroup(${1})",
            "trigger": "nedgesgroup\tfunction"
        },
        {
            "contents": "neighbour(${1})",
            "trigger": "neighbour\tfunction"
        },
        {
            "contents": "neighbourcount(${1})",
            "trigger": "neighbourcount\tfunction"
        },
        {
            "contents": "neighbours(${1})",
            "trigger": "neighbours\tfunction"
        },
        {
            "contents": "newgroup(${1})",
            "trigger": "newgroup\tfunction"
        },
        {
            "contents": "newsampler(${1})",
            "trigger": "newsampler\tfunction"
        },
        {
            "contents": "nextsample(${1})",
            "trigger": "nextsample\tfunction"
        },
        {
            "contents": "ninput(${1})",
            "trigger": "ninput\tfunction"
        },
        {
            "contents": "ninputs(${1})",
            "trigger": "ninputs\tfunction"
        },
        {
            "contents": "noise(${1})",
            "trigger": "noise\tfunction"
        },
        {
            "contents": "noised(${1})",
            "trigger": "noised\tfunction"
        },
        {
            "contents": "normal_bsdf(${1})",
            "trigger": "normal_bsdf\tfunction"
        },
        {
            "contents": "normalize(${1})",
            "trigger": "normalize\tfunction"
        },
        {
            "contents": "normalname(${1})",
            "trigger": "normalname\tfunction"
        },
        {
            "contents": "npoints(${1})",
            "trigger": "npoints\tfunction"
        },
        {
            "contents": "npointsgroup(${1})",
            "trigger": "npointsgroup\tfunction"
        },
        {
            "contents": "nprimitives(${1})",
            "trigger": "nprimitives\tfunction"
        },
        {
            "contents": "nprimitivesgroup(${1})",
            "trigger": "nprimitivesgroup\tfunction"
        },
        {
            "contents": "nrandom(${1})",
            "trigger": "nrandom\tfunction"
        },
        {
            "contents": "ntransform(${1})",
            "trigger": "ntransform\tfunction"
        },
        {
            "contents": "nuniqueval(${1})",
            "trigger": "nuniqueval\tfunction"
        },
        {
            "contents": "nvertices(${1})",
            "trigger": "nvertices\tfunction"
        },
        {
            "contents": "nverticesgroup(${1})",
            "trigger": "nverticesgroup\tfunction"
        },
        {
            "contents": "occlusion(${1})",
            "trigger": "occlusion\tfunction"
        },
        {
            "contents": "ocean_sample(${1})",
            "trigger": "ocean_sample\tfunction"
        },
        {
            "contents": "ocio_import(${1})",
            "trigger": "ocio_import\tfunction"
        },
        {
            "contents": "ocio_spaces(${1})",
            "trigger": "ocio_spaces\tfunction"
        },
        {
            "contents": "ocio_transform(${1})",
            "trigger": "ocio_transform\tfunction"
        },
        {
            "contents": "onoise(${1})",
            "trigger": "onoise\tfunction"
        },
        {
            "contents": "opdigits(${1})",
            "trigger": "opdigits\tfunction"
        },
        {
            "contents": "opend(${1})",
            "trigger": "opend\tfunction"
        },
        {
            "contents": "opfullpath(${1})",
            "trigger": "opfullpath\tfunction"
        },
        {
            "contents": "opparentbonetransform(${1})",
            "trigger": "opparentbonetransform\tfunction"
        },
        {
            "contents": "opparenttransform(${1})",
            "trigger": "opparenttransform\tfunction"
        },
        {
            "contents": "opparmtransform(${1})",
            "trigger": "opparmtransform\tfunction"
        },
        {
            "contents": "oppreconstrainttransform(${1})",
            "trigger": "oppreconstrainttransform\tfunction"
        },
        {
            "contents": "oppretransform(${1})",
            "trigger": "oppretransform\tfunction"
        },
        {
            "contents": "opstart(${1})",
            "trigger": "opstart\tfunction"
        },
        {
            "contents": "optransform(${1})",
            "trigger": "optransform\tfunction"
        },
        {
            "contents": "ord(${1})",
            "trigger": "ord\tfunction"
        },
        {
            "contents": "osd_facecount(${1})",
            "trigger": "osd_facecount\tfunction"
        },
        {
            "contents": "osd_firstpatch(${1})",
            "trigger": "osd_firstpatch\tfunction"
        },
        {
            "contents": "osd_limitsurface(${1})",
            "trigger": "osd_limitsurface\tfunction"
        },
        {
            "contents": "osd_limitsurfacevertex(${1})",
            "trigger": "osd_limitsurfacevertex\tfunction"
        },
        {
            "contents": "osd_lookupface(${1})",
            "trigger": "osd_lookupface\tfunction"
        },
        {
            "contents": "osd_lookuppatch(${1})",
            "trigger": "osd_lookuppatch\tfunction"
        },
        {
            "contents": "osd_patchcount(${1})",
            "trigger": "osd_patchcount\tfunction"
        },
        {
            "contents": "osd_patches(${1})",
            "trigger": "osd_patches\tfunction"
        },
        {
            "contents": "outerproduct(${1})",
            "trigger": "outerproduct\tfunction"
        },
        {
            "contents": "ow_nspace(${1})",
            "trigger": "ow_nspace\tfunction"
        },
        {
            "contents": "ow_space(${1})",
            "trigger": "ow_space\tfunction"
        },
        {
            "contents": "ow_vspace(${1})",
            "trigger": "ow_vspace\tfunction"
        },
        {
            "contents": "pack_inttosafefloat(${1})",
            "trigger": "pack_inttosafefloat\tfunction"
        },
        {
            "contents": "pathtrace(${1})",
            "trigger": "pathtrace\tfunction"
        },
        {
            "contents": "pcclose(${1})",
            "trigger": "pcclose\tfunction"
        },
        {
            "contents": "pcconvex(${1})",
            "trigger": "pcconvex\tfunction"
        },
        {
            "contents": "pcexport(${1})",
            "trigger": "pcexport\tfunction"
        },
        {
            "contents": "pcfarthest(${1})",
            "trigger": "pcfarthest\tfunction"
        },
        {
            "contents": "pcfilter(${1})",
            "trigger": "pcfilter\tfunction"
        },
        {
            "contents": "pcfind(${1})",
            "trigger": "pcfind\tfunction"
        },
        {
            "contents": "pcfind_radius(${1})",
            "trigger": "pcfind_radius\tfunction"
        },
        {
            "contents": "pcgenerate(${1})",
            "trigger": "pcgenerate\tfunction"
        },
        {
            "contents": "pcimport(${1})",
            "trigger": "pcimport\tfunction"
        },
        {
            "contents": "pcimportbyidx3(${1})",
            "trigger": "pcimportbyidx3\tfunction"
        },
        {
            "contents": "pcimportbyidx4(${1})",
            "trigger": "pcimportbyidx4\tfunction"
        },
        {
            "contents": "pcimportbyidxf(${1})",
            "trigger": "pcimportbyidxf\tfunction"
        },
        {
            "contents": "pcimportbyidxi(${1})",
            "trigger": "pcimportbyidxi\tfunction"
        },
        {
            "contents": "pcimportbyidxp(${1})",
            "trigger": "pcimportbyidxp\tfunction"
        },
        {
            "contents": "pcimportbyidxs(${1})",
            "trigger": "pcimportbyidxs\tfunction"
        },
        {
            "contents": "pcimportbyidxv(${1})",
            "trigger": "pcimportbyidxv\tfunction"
        },
        {
            "contents": "pciterate(${1})",
            "trigger": "pciterate\tfunction"
        },
        {
            "contents": "pcnumfound(${1})",
            "trigger": "pcnumfound\tfunction"
        },
        {
            "contents": "pcopen(${1})",
            "trigger": "pcopen\tfunction"
        },
        {
            "contents": "pcopenlod(${1})",
            "trigger": "pcopenlod\tfunction"
        },
        {
            "contents": "pcsampleleaf(${1})",
            "trigger": "pcsampleleaf\tfunction"
        },
        {
            "contents": "pcsize(${1})",
            "trigger": "pcsize\tfunction"
        },
        {
            "contents": "pcunshaded(${1})",
            "trigger": "pcunshaded\tfunction"
        },
        {
            "contents": "pcwrite(${1})",
            "trigger": "pcwrite\tfunction"
        },
        {
            "contents": "pgfind(${1})",
            "trigger": "pgfind\tfunction"
        },
        {
            "contents": "phong(${1})",
            "trigger": "phong\tfunction"
        },
        {
            "contents": "phongBRDF(${1})",
            "trigger": "phongBRDF\tfunction"
        },
        {
            "contents": "phonglobe(${1})",
            "trigger": "phonglobe\tfunction"
        },
        {
            "contents": "photonmap(${1})",
            "trigger": "photonmap\tfunction"
        },
        {
            "contents": "planeindex(${1})",
            "trigger": "planeindex\tfunction"
        },
        {
            "contents": "planename(${1})",
            "trigger": "planename\tfunction"
        },
        {
            "contents": "planepointdistance(${1})",
            "trigger": "planepointdistance\tfunction"
        },
        {
            "contents": "planesize(${1})",
            "trigger": "planesize\tfunction"
        },
        {
            "contents": "planesphereintersect(${1})",
            "trigger": "planesphereintersect\tfunction"
        },
        {
            "contents": "pluralize(${1})",
            "trigger": "pluralize\tfunction"
        },
        {
            "contents": "pnoise(${1})",
            "trigger": "pnoise\tfunction"
        },
        {
            "contents": "point(${1})",
            "trigger": "point\tfunction"
        },
        {
            "contents": "pointattrib(${1})",
            "trigger": "pointattrib\tfunction"
        },
        {
            "contents": "pointattribsize(${1})",
            "trigger": "pointattribsize\tfunction"
        },
        {
            "contents": "pointattribtype(${1})",
            "trigger": "pointattribtype\tfunction"
        },
        {
            "contents": "pointattribtypeinfo(${1})",
            "trigger": "pointattribtypeinfo\tfunction"
        },
        {
            "contents": "pointedge(${1})",
            "trigger": "pointedge\tfunction"
        },
        {
            "contents": "pointhedge(${1})",
            "trigger": "pointhedge\tfunction"
        },
        {
            "contents": "pointhedgenext(${1})",
            "trigger": "pointhedgenext\tfunction"
        },
        {
            "contents": "pointname(${1})",
            "trigger": "pointname\tfunction"
        },
        {
            "contents": "pointprims(${1})",
            "trigger": "pointprims\tfunction"
        },
        {
            "contents": "pointvertex(${1})",
            "trigger": "pointvertex\tfunction"
        },
        {
            "contents": "pointvertices(${1})",
            "trigger": "pointvertices\tfunction"
        },
        {
            "contents": "polardecomp(${1})",
            "trigger": "polardecomp\tfunction"
        },
        {
            "contents": "pop(${1})",
            "trigger": "pop\tfunction"
        },
        {
            "contents": "pow(${1})",
            "trigger": "pow\tfunction"
        },
        {
            "contents": "predicate_incircle(${1})",
            "trigger": "predicate_incircle\tfunction"
        },
        {
            "contents": "predicate_insphere(${1})",
            "trigger": "predicate_insphere\tfunction"
        },
        {
            "contents": "predicate_orient2d(${1})",
            "trigger": "predicate_orient2d\tfunction"
        },
        {
            "contents": "predicate_orient3d(${1})",
            "trigger": "predicate_orient3d\tfunction"
        },
        {
            "contents": "prim(${1})",
            "trigger": "prim\tfunction"
        },
        {
            "contents": "prim_attribute(${1})",
            "trigger": "prim_attribute\tfunction"
        },
        {
            "contents": "prim_normal(${1})",
            "trigger": "prim_normal\tfunction"
        },
        {
            "contents": "primarclen(${1})",
            "trigger": "primarclen\tfunction"
        },
        {
            "contents": "primattrib(${1})",
            "trigger": "primattrib\tfunction"
        },
        {
            "contents": "primattribsize(${1})",
            "trigger": "primattribsize\tfunction"
        },
        {
            "contents": "primattribtype(${1})",
            "trigger": "primattribtype\tfunction"
        },
        {
            "contents": "primattribtypeinfo(${1})",
            "trigger": "primattribtypeinfo\tfunction"
        },
        {
            "contents": "primduv(${1})",
            "trigger": "primduv\tfunction"
        },
        {
            "contents": "primfind(${1})",
            "trigger": "primfind\tfunction"
        },
        {
            "contents": "primhedge(${1})",
            "trigger": "primhedge\tfunction"
        },
        {
            "contents": "primintrinsic(${1})",
            "trigger": "primintrinsic\tfunction"
        },
        {
            "contents": "primpoint(${1})",
            "trigger": "primpoint\tfunction"
        },
        {
            "contents": "primpoints(${1})",
            "trigger": "primpoints\tfunction"
        },
        {
            "contents": "primuv(${1})",
            "trigger": "primuv\tfunction"
        },
        {
            "contents": "primuvconvert(${1})",
            "trigger": "primuvconvert\tfunction"
        },
        {
            "contents": "primvertex(${1})",
            "trigger": "primvertex\tfunction"
        },
        {
            "contents": "primvertexcount(${1})",
            "trigger": "primvertexcount\tfunction"
        },
        {
            "contents": "primvertices(${1})",
            "trigger": "primvertices\tfunction"
        },
        {
            "contents": "print_once(${1})",
            "trigger": "print_once\tfunction"
        },
        {
            "contents": "printf(${1})",
            "trigger": "printf\tfunction"
        },
        {
            "contents": "product(${1})",
            "trigger": "product\tfunction"
        },
        {
            "contents": "ptexture(${1})",
            "trigger": "ptexture\tfunction"
        },
        {
            "contents": "ptlined(${1})",
            "trigger": "ptlined\tfunction"
        },
        {
            "contents": "ptransform(${1})",
            "trigger": "ptransform\tfunction"
        },
        {
            "contents": "push(${1})",
            "trigger": "push\tfunction"
        },
        {
            "contents": "qconvert(${1})",
            "trigger": "qconvert\tfunction"
        },
        {
            "contents": "qdistance(${1})",
            "trigger": "qdistance\tfunction"
        },
        {
            "contents": "qinvert(${1})",
            "trigger": "qinvert\tfunction"
        },
        {
            "contents": "qmultiply(${1})",
            "trigger": "qmultiply\tfunction"
        },
        {
            "contents": "qrotate(${1})",
            "trigger": "qrotate\tfunction"
        },
        {
            "contents": "quaternion(${1})",
            "trigger": "quaternion\tfunction"
        },
        {
            "contents": "radians(${1})",
            "trigger": "radians\tfunction"
        },
        {
            "contents": "rand(${1})",
            "trigger": "rand\tfunction"
        },
        {
            "contents": "random(${1})",
            "trigger": "random\tfunction"
        },
        {
            "contents": "random_fhash(${1})",
            "trigger": "random_fhash\tfunction"
        },
        {
            "contents": "random_ihash(${1})",
            "trigger": "random_ihash\tfunction"
        },
        {
            "contents": "random_shash(${1})",
            "trigger": "random_shash\tfunction"
        },
        {
            "contents": "random_sobol(${1})",
            "trigger": "random_sobol\tfunction"
        },
        {
            "contents": "rawbumpmap(${1})",
            "trigger": "rawbumpmap\tfunction"
        },
        {
            "contents": "rawbumpmapA(${1})",
            "trigger": "rawbumpmapA\tfunction"
        },
        {
            "contents": "rawbumpmapB(${1})",
            "trigger": "rawbumpmapB\tfunction"
        },
        {
            "contents": "rawbumpmapG(${1})",
            "trigger": "rawbumpmapG\tfunction"
        },
        {
            "contents": "rawbumpmapL(${1})",
            "trigger": "rawbumpmapL\tfunction"
        },
        {
            "contents": "rawbumpmapR(${1})",
            "trigger": "rawbumpmapR\tfunction"
        },
        {
            "contents": "rawcolormap(${1})",
            "trigger": "rawcolormap\tfunction"
        },
        {
            "contents": "rayhittest(${1})",
            "trigger": "rayhittest\tfunction"
        },
        {
            "contents": "rayimport(${1})",
            "trigger": "rayimport\tfunction"
        },
        {
            "contents": "re_find(${1})",
            "trigger": "re_find\tfunction"
        },
        {
            "contents": "re_findall(${1})",
            "trigger": "re_findall\tfunction"
        },
        {
            "contents": "re_match(${1})",
            "trigger": "re_match\tfunction"
        },
        {
            "contents": "re_replace(${1})",
            "trigger": "re_replace\tfunction"
        },
        {
            "contents": "re_split(${1})",
            "trigger": "re_split\tfunction"
        },
        {
            "contents": "reflect(${1})",
            "trigger": "reflect\tfunction"
        },
        {
            "contents": "reflectlight(${1})",
            "trigger": "reflectlight\tfunction"
        },
        {
            "contents": "refract(${1})",
            "trigger": "refract\tfunction"
        },
        {
            "contents": "refractlight(${1})",
            "trigger": "refractlight\tfunction"
        },
        {
            "contents": "relativepath(${1})",
            "trigger": "relativepath\tfunction"
        },
        {
            "contents": "relbbox(${1})",
            "trigger": "relbbox\tfunction"
        },
        {
            "contents": "relpointbbox(${1})",
            "trigger": "relpointbbox\tfunction"
        },
        {
            "contents": "removegroup(${1})",
            "trigger": "removegroup\tfunction"
        },
        {
            "contents": "removeindex(${1})",
            "trigger": "removeindex\tfunction"
        },
        {
            "contents": "removepoint(${1})",
            "trigger": "removepoint\tfunction"
        },
        {
            "contents": "removeprim(${1})",
            "trigger": "removeprim\tfunction"
        },
        {
            "contents": "removevalue(${1})",
            "trigger": "removevalue\tfunction"
        },
        {
            "contents": "renderstate(${1})",
            "trigger": "renderstate\tfunction"
        },
        {
            "contents": "reorder(${1})",
            "trigger": "reorder\tfunction"
        },
        {
            "contents": "resample_linear(${1})",
            "trigger": "resample_linear\tfunction"
        },
        {
            "contents": "resize(${1})",
            "trigger": "resize\tfunction"
        },
        {
            "contents": "resolvemissedray(${1})",
            "trigger": "resolvemissedray\tfunction"
        },
        {
            "contents": "reverse(${1})",
            "trigger": "reverse\tfunction"
        },
        {
            "contents": "rgbtohsv(${1})",
            "trigger": "rgbtohsv\tfunction"
        },
        {
            "contents": "rgbtoxyz(${1})",
            "trigger": "rgbtoxyz\tfunction"
        },
        {
            "contents": "rint(${1})",
            "trigger": "rint\tfunction"
        },
        {
            "contents": "rotate(${1})",
            "trigger": "rotate\tfunction"
        },
        {
            "contents": "rotate_x_to(${1})",
            "trigger": "rotate_x_to\tfunction"
        },
        {
            "contents": "rstrip(${1})",
            "trigger": "rstrip\tfunction"
        },
        {
            "contents": "sample_bsdf(${1})",
            "trigger": "sample_bsdf\tfunction"
        },
        {
            "contents": "sample_cauchy(${1})",
            "trigger": "sample_cauchy\tfunction"
        },
        {
            "contents": "sample_cdf(${1})",
            "trigger": "sample_cdf\tfunction"
        },
        {
            "contents": "sample_circle_arc(${1})",
            "trigger": "sample_circle_arc\tfunction"
        },
        {
            "contents": "sample_circle_edge_uniform(${1})",
            "trigger": "sample_circle_edge_uniform\tfunction"
        },
        {
            "contents": "sample_circle_slice(${1})",
            "trigger": "sample_circle_slice\tfunction"
        },
        {
            "contents": "sample_circle_uniform(${1})",
            "trigger": "sample_circle_uniform\tfunction"
        },
        {
            "contents": "sample_direction_cone(${1})",
            "trigger": "sample_direction_cone\tfunction"
        },
        {
            "contents": "sample_direction_uniform(${1})",
            "trigger": "sample_direction_uniform\tfunction"
        },
        {
            "contents": "sample_discrete(${1})",
            "trigger": "sample_discrete\tfunction"
        },
        {
            "contents": "sample_exponential(${1})",
            "trigger": "sample_exponential\tfunction"
        },
        {
            "contents": "sample_geometry(${1})",
            "trigger": "sample_geometry\tfunction"
        },
        {
            "contents": "sample_hemisphere(${1})",
            "trigger": "sample_hemisphere\tfunction"
        },
        {
            "contents": "sample_hypersphere_cone(${1})",
            "trigger": "sample_hypersphere_cone\tfunction"
        },
        {
            "contents": "sample_hypersphere_uniform(${1})",
            "trigger": "sample_hypersphere_uniform\tfunction"
        },
        {
            "contents": "sample_light(${1})",
            "trigger": "sample_light\tfunction"
        },
        {
            "contents": "sample_lognormal(${1})",
            "trigger": "sample_lognormal\tfunction"
        },
        {
            "contents": "sample_lognormal_by_median(${1})",
            "trigger": "sample_lognormal_by_median\tfunction"
        },
        {
            "contents": "sample_normal(${1})",
            "trigger": "sample_normal\tfunction"
        },
        {
            "contents": "sample_orientation_cone(${1})",
            "trigger": "sample_orientation_cone\tfunction"
        },
        {
            "contents": "sample_orientation_uniform(${1})",
            "trigger": "sample_orientation_uniform\tfunction"
        },
        {
            "contents": "sample_photon(${1})",
            "trigger": "sample_photon\tfunction"
        },
        {
            "contents": "sample_sphere_cone(${1})",
            "trigger": "sample_sphere_cone\tfunction"
        },
        {
            "contents": "sample_sphere_uniform(${1})",
            "trigger": "sample_sphere_uniform\tfunction"
        },
        {
            "contents": "sampledisk(${1})",
            "trigger": "sampledisk\tfunction"
        },
        {
            "contents": "scale(${1})",
            "trigger": "scale\tfunction"
        },
        {
            "contents": "scatter(${1})",
            "trigger": "scatter\tfunction"
        },
        {
            "contents": "select(${1})",
            "trigger": "select\tfunction"
        },
        {
            "contents": "sensor_panorama_create(${1})",
            "trigger": "sensor_panorama_create\tfunction"
        },
        {
            "contents": "sensor_panorama_getcolor(${1})",
            "trigger": "sensor_panorama_getcolor\tfunction"
        },
        {
            "contents": "sensor_panorama_getcone(${1})",
            "trigger": "sensor_panorama_getcone\tfunction"
        },
        {
            "contents": "sensor_panorama_getdepth(${1})",
            "trigger": "sensor_panorama_getdepth\tfunction"
        },
        {
            "contents": "sensor_save(${1})",
            "trigger": "sensor_save\tfunction"
        },
        {
            "contents": "serialize(${1})",
            "trigger": "serialize\tfunction"
        },
        {
            "contents": "set(${1})",
            "trigger": "set\tfunction"
        },
        {
            "contents": "setagentclipnames(${1})",
            "trigger": "setagentclipnames\tfunction"
        },
        {
            "contents": "setagentclips(${1})",
            "trigger": "setagentclips\tfunction"
        },
        {
            "contents": "setagentcliptimes(${1})",
            "trigger": "setagentcliptimes\tfunction"
        },
        {
            "contents": "setagentclipweights(${1})",
            "trigger": "setagentclipweights\tfunction"
        },
        {
            "contents": "setagentcollisionlayer(${1})",
            "trigger": "setagentcollisionlayer\tfunction"
        },
        {
            "contents": "setagentcurrentlayer(${1})",
            "trigger": "setagentcurrentlayer\tfunction"
        },
        {
            "contents": "setagentlocaltransform(${1})",
            "trigger": "setagentlocaltransform\tfunction"
        },
        {
            "contents": "setagentlocaltransforms(${1})",
            "trigger": "setagentlocaltransforms\tfunction"
        },
        {
            "contents": "setagentworldtransform(${1})",
            "trigger": "setagentworldtransform\tfunction"
        },
        {
            "contents": "setagentworldtransforms(${1})",
            "trigger": "setagentworldtransforms\tfunction"
        },
        {
            "contents": "setattrib(${1})",
            "trigger": "setattrib\tfunction"
        },
        {
            "contents": "setattribtypeinfo(${1})",
            "trigger": "setattribtypeinfo\tfunction"
        },
        {
            "contents": "setcomp(${1})",
            "trigger": "setcomp\tfunction"
        },
        {
            "contents": "setcurrentlight(${1})",
            "trigger": "setcurrentlight\tfunction"
        },
        {
            "contents": "setdetailattrib(${1})",
            "trigger": "setdetailattrib\tfunction"
        },
        {
            "contents": "setedgegroup(${1})",
            "trigger": "setedgegroup\tfunction"
        },
        {
            "contents": "setpointattrib(${1})",
            "trigger": "setpointattrib\tfunction"
        },
        {
            "contents": "setpointgroup(${1})",
            "trigger": "setpointgroup\tfunction"
        },
        {
            "contents": "setprimattrib(${1})",
            "trigger": "setprimattrib\tfunction"
        },
        {
            "contents": "setprimgroup(${1})",
            "trigger": "setprimgroup\tfunction"
        },
        {
            "contents": "setprimintrinsic(${1})",
            "trigger": "setprimintrinsic\tfunction"
        },
        {
            "contents": "setprimvertex(${1})",
            "trigger": "setprimvertex\tfunction"
        },
        {
            "contents": "setsamplestore(${1})",
            "trigger": "setsamplestore\tfunction"
        },
        {
            "contents": "setvertexattrib(${1})",
            "trigger": "setvertexattrib\tfunction"
        },
        {
            "contents": "setvertexgroup(${1})",
            "trigger": "setvertexgroup\tfunction"
        },
        {
            "contents": "setvertexpoint(${1})",
            "trigger": "setvertexpoint\tfunction"
        },
        {
            "contents": "shadow(${1})",
            "trigger": "shadow\tfunction"
        },
        {
            "contents": "shadow_light(${1})",
            "trigger": "shadow_light\tfunction"
        },
        {
            "contents": "shadowmap(${1})",
            "trigger": "shadowmap\tfunction"
        },
        {
            "contents": "shimport(${1})",
            "trigger": "shimport\tfunction"
        },
        {
            "contents": "shl(${1})",
            "trigger": "shl\tfunction"
        },
        {
            "contents": "shr(${1})",
            "trigger": "shr\tfunction"
        },
        {
            "contents": "shrz(${1})",
            "trigger": "shrz\tfunction"
        },
        {
            "contents": "sign(${1})",
            "trigger": "sign\tfunction"
        },
        {
            "contents": "simport(${1})",
            "trigger": "simport\tfunction"
        },
        {
            "contents": "sin(${1})",
            "trigger": "sin\tfunction"
        },
        {
            "contents": "sinh(${1})",
            "trigger": "sinh\tfunction"
        },
        {
            "contents": "sleep(${1})",
            "trigger": "sleep\tfunction"
        },
        {
            "contents": "slerp(${1})",
            "trigger": "slerp\tfunction"
        },
        {
            "contents": "slice(${1})",
            "trigger": "slice\tfunction"
        },
        {
            "contents": "slideframe(${1})",
            "trigger": "slideframe\tfunction"
        },
        {
            "contents": "smooth(${1})",
            "trigger": "smooth\tfunction"
        },
        {
            "contents": "smoothrotation(${1})",
            "trigger": "smoothrotation\tfunction"
        },
        {
            "contents": "snoise(${1})",
            "trigger": "snoise\tfunction"
        },
        {
            "contents": "solid_angle(${1})",
            "trigger": "solid_angle\tfunction"
        },
        {
            "contents": "solvecubic(${1})",
            "trigger": "solvecubic\tfunction"
        },
        {
            "contents": "solvepoly(${1})",
            "trigger": "solvepoly\tfunction"
        },
        {
            "contents": "solvequadratic(${1})",
            "trigger": "solvequadratic\tfunction"
        },
        {
            "contents": "sort(${1})",
            "trigger": "sort\tfunction"
        },
        {
            "contents": "specular(${1})",
            "trigger": "specular\tfunction"
        },
        {
            "contents": "specularBRDF(${1})",
            "trigger": "specularBRDF\tfunction"
        },
        {
            "contents": "spline(${1})",
            "trigger": "spline\tfunction"
        },
        {
            "contents": "split(${1})",
            "trigger": "split\tfunction"
        },
        {
            "contents": "split_bsdf(${1})",
            "trigger": "split_bsdf\tfunction"
        },
        {
            "contents": "splitpath(${1})",
            "trigger": "splitpath\tfunction"
        },
        {
            "contents": "sprintf(${1})",
            "trigger": "sprintf\tfunction"
        },
        {
            "contents": "sqrt(${1})",
            "trigger": "sqrt\tfunction"
        },
        {
            "contents": "sssapprox(${1})",
            "trigger": "sssapprox\tfunction"
        },
        {
            "contents": "startswith(${1})",
            "trigger": "startswith\tfunction"
        },
        {
            "contents": "storelightexport(${1})",
            "trigger": "storelightexport\tfunction"
        },
        {
            "contents": "strip(${1})",
            "trigger": "strip\tfunction"
        },
        {
            "contents": "strlen(${1})",
            "trigger": "strlen\tfunction"
        },
        {
            "contents": "sum(${1})",
            "trigger": "sum\tfunction"
        },
        {
            "contents": "switch(${1})",
            "trigger": "switch\tfunction"
        },
        {
            "contents": "swizzle(${1})",
            "trigger": "swizzle\tfunction"
        },
        {
            "contents": "tan(${1})",
            "trigger": "tan\tfunction"
        },
        {
            "contents": "tanh(${1})",
            "trigger": "tanh\tfunction"
        },
        {
            "contents": "tet_adjacent(${1})",
            "trigger": "tet_adjacent\tfunction"
        },
        {
            "contents": "tet_faceindex(${1})",
            "trigger": "tet_faceindex\tfunction"
        },
        {
            "contents": "teximport(${1})",
            "trigger": "teximport\tfunction"
        },
        {
            "contents": "texprintf(${1})",
            "trigger": "texprintf\tfunction"
        },
        {
            "contents": "texture(${1})",
            "trigger": "texture\tfunction"
        },
        {
            "contents": "texture3d(${1})",
            "trigger": "texture3d\tfunction"
        },
        {
            "contents": "texture3dBox(${1})",
            "trigger": "texture3dBox\tfunction"
        },
        {
            "contents": "titlecase(${1})",
            "trigger": "titlecase\tfunction"
        },
        {
            "contents": "toNDC(${1})",
            "trigger": "toNDC\tfunction"
        },
        {
            "contents": "tolower(${1})",
            "trigger": "tolower\tfunction"
        },
        {
            "contents": "toupper(${1})",
            "trigger": "toupper\tfunction"
        },
        {
            "contents": "trace(${1})",
            "trigger": "trace\tfunction"
        },
        {
            "contents": "translate(${1})",
            "trigger": "translate\tfunction"
        },
        {
            "contents": "translucent(${1})",
            "trigger": "translucent\tfunction"
        },
        {
            "contents": "transpose(${1})",
            "trigger": "transpose\tfunction"
        },
        {
            "contents": "trunc(${1})",
            "trigger": "trunc\tfunction"
        },
        {
            "contents": "tw_nspace(${1})",
            "trigger": "tw_nspace\tfunction"
        },
        {
            "contents": "tw_space(${1})",
            "trigger": "tw_space\tfunction"
        },
        {
            "contents": "tw_vspace(${1})",
            "trigger": "tw_vspace\tfunction"
        },
        {
            "contents": "uniqueval(${1})",
            "trigger": "uniqueval\tfunction"
        },
        {
            "contents": "unpack_intfromsafefloat(${1})",
            "trigger": "unpack_intfromsafefloat\tfunction"
        },
        {
            "contents": "unserialize(${1})",
            "trigger": "unserialize\tfunction"
        },
        {
            "contents": "upush(${1})",
            "trigger": "upush\tfunction"
        },
        {
            "contents": "uvdist(${1})",
            "trigger": "uvdist\tfunction"
        },
        {
            "contents": "uvintersect(${1})",
            "trigger": "uvintersect\tfunction"
        },
        {
            "contents": "uvsample(${1})",
            "trigger": "uvsample\tfunction"
        },
        {
            "contents": "uvunwrap(${1})",
            "trigger": "uvunwrap\tfunction"
        },
        {
            "contents": "variance(${1})",
            "trigger": "variance\tfunction"
        },
        {
            "contents": "velocityname(${1})",
            "trigger": "velocityname\tfunction"
        },
        {
            "contents": "vertex(${1})",
            "trigger": "vertex\tfunction"
        },
        {
            "contents": "vertexattrib(${1})",
            "trigger": "vertexattrib\tfunction"
        },
        {
            "contents": "vertexattribsize(${1})",
            "trigger": "vertexattribsize\tfunction"
        },
        {
            "contents": "vertexattribtype(${1})",
            "trigger": "vertexattribtype\tfunction"
        },
        {
            "contents": "vertexattribtypeinfo(${1})",
            "trigger": "vertexattribtypeinfo\tfunction"
        },
        {
            "contents": "vertexhedge(${1})",
            "trigger": "vertexhedge\tfunction"
        },
        {
            "contents": "vertexindex(${1})",
            "trigger": "vertexindex\tfunction"
        },
        {
            "contents": "vertexnext(${1})",
            "trigger": "vertexnext\tfunction"
        },
        {
            "contents": "vertexpoint(${1})",
            "trigger": "vertexpoint\tfunction"
        },
        {
            "contents": "vertexprev(${1})",
            "trigger": "vertexprev\tfunction"
        },
        {
            "contents": "vertexprim(${1})",
            "trigger": "vertexprim\tfunction"
        },
        {
            "contents": "vertexprimindex(${1})",
            "trigger": "vertexprimindex\tfunction"
        },
        {
            "contents": "vnoise(${1})",
            "trigger": "vnoise\tfunction"
        },
        {
            "contents": "volume(${1})",
            "trigger": "volume\tfunction"
        },
        {
            "contents": "volumegradient(${1})",
            "trigger": "volumegradient\tfunction"
        },
        {
            "contents": "volumeindex(${1})",
            "trigger": "volumeindex\tfunction"
        },
        {
            "contents": "volumeindexorigin(${1})",
            "trigger": "volumeindexorigin\tfunction"
        },
        {
            "contents": "volumeindextopos(${1})",
            "trigger": "volumeindextopos\tfunction"
        },
        {
            "contents": "volumeindexv(${1})",
            "trigger": "volumeindexv\tfunction"
        },
        {
            "contents": "volumepostoindex(${1})",
            "trigger": "volumepostoindex\tfunction"
        },
        {
            "contents": "volumeres(${1})",
            "trigger": "volumeres\tfunction"
        },
        {
            "contents": "volumesample(${1})",
            "trigger": "volumesample\tfunction"
        },
        {
            "contents": "volumesamplev(${1})",
            "trigger": "volumesamplev\tfunction"
        },
        {
            "contents": "volumevoxeldiameter(${1})",
            "trigger": "volumevoxeldiameter\tfunction"
        },
        {
            "contents": "vtransform(${1})",
            "trigger": "vtransform\tfunction"
        },
        {
            "contents": "warning(${1})",
            "trigger": "warning\tfunction"
        },
        {
            "contents": "wireblinn(${1})",
            "trigger": "wireblinn\tfunction"
        },
        {
            "contents": "wirediffuse(${1})",
            "trigger": "wirediffuse\tfunction"
        },
        {
            "contents": "wnoise(${1})",
            "trigger": "wnoise\tfunction"
        },
        {
            "contents": "wo_nspace(${1})",
            "trigger": "wo_nspace\tfunction"
        },
        {
            "contents": "wo_space(${1})",
            "trigger": "wo_space\tfunction"
        },
        {
            "contents": "wo_vspace(${1})",
            "trigger": "wo_vspace\tfunction"
        },
        {
            "contents": "writepixel(${1})",
            "trigger": "writepixel\tfunction"
        },
        {
            "contents": "wt_nspace(${1})",
            "trigger": "wt_nspace\tfunction"
        },
        {
            "contents": "wt_space(${1})",
            "trigger": "wt_space\tfunction"
        },
        {
            "contents": "wt_vspace(${1})",
            "trigger": "wt_vspace\tfunction"
        },
        {
            "contents": "xnoise(${1})",
            "trigger": "xnoise\tfunction"
        },
        {
            "contents": "xnoised(${1})",
            "trigger": "xnoised\tfunction"
        },
        {
            "contents": "xyzdist(${1})",
            "trigger": "xyzdist\tfunction"
        },
        {
            "contents": "xyztorgb(${1})",
            "trigger": "xyztorgb\tfunction"
        }
    ],
    "scope": "source.vex"
}